plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'fr.elytra.java-conventions'
}

repositories {
    // Use Maven Central for resolving dependencies.
    maven {
    url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

    // As of Gradle 5.1, you can limit this to only those
    // dependencies you expect from it
    content {
      includeGroup 'org.bukkit'
      includeGroup 'org.spigotmc'
    }
  }
  /*
   As Spigot-API depends on the BungeeCord ChatComponent-API,
  we need to add the Sonatype OSS repository, as Gradle,
  in comparison to maven, doesn't want to understand the ~/.m2
  directory unless added using mavenLocal(). Maven usually just gets
  it from there, as most people have run the BuildTools at least once.
  This is therefore not needed if you're using the full Spigot/CraftBukkit,
  or if you're using the Bukkit API.
  */
  maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
  maven { url = 'https://oss.sonatype.org/content/repositories/central' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    
    // Elytra core
    compileOnly project(':elytra-compiler')
    compileOnly project(':elytra-annotation-processor')
    annotationProcessor project(':elytra-compiler')
    annotationProcessor project(':elytra-annotation-processor')

    // Elytra implementation
    annotationProcessor project(':elytra-implementation:spigot')
    compileOnly project(':elytra-implementation:spigot')

    // Spigot
    compileOnly 'org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}